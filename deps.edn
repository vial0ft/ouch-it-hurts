{:paths  ["src/clj" "src/cljs" "src/cljc" "resources"]
 :deps {
        org.clojure/clojure {:mvn/version "1.11.1"}
        metosin/spec-tools {:mvn/version "0.10.5"}

        ;;;; server

        ;; requsets handler
        http-kit/http-kit   {:mvn/version "2.3.0"}

        ;; logging
        org.clojure/tools.logging {:mvn/version "1.2.4"}
        ch.qos.logback/logback-classic {:mvn/version "1.4.4"}

        ;; JSON
        cheshire/cheshire {:mvn/version "5.11.0"}

        ;; DB
        com.github.seancorfield/next.jdbc {:mvn/version "1.3.847"}
        org.postgresql/postgresql {:mvn/version "42.5.4"}
        hikari-cp/hikari-cp {:mvn/version "3.0.1"}

        com.novemberain/pantomime {:mvn/version "2.11.0"}


        ;;;; Client

        ;; cljs
        org.clojure/clojurescript {:mvn/version "1.11.54"}

        ;; Reagent
        reagent/reagent {:mvn/version "1.2.0"}
        ;; Reagent deps
        cljsjs/react {:mvn/version "18.2.0-1"}
        cljsjs/react-dom {:mvn/version "18.2.0-1"}

        ;; Request
        cljs-ajax/cljs-ajax {:mvn/version "0.8.4"}

        }

 :aliases {
           ;; Front
           :fig {:extra-deps {com.bhauman/figwheel-main  {:mvn/version "0.2.18"}
                              org.slf4j/slf4j-nop        {:mvn/version "1.7.30"}
                              com.bhauman/rebel-readline {:mvn/version "0.1.4"}}
                 :extra-paths ["target"]}

           :build-front {:extra-paths ["env/dev/resources"]
                         :extra-deps {cider/piggieback {:mvn/version "0.5.3"}}
                         :main-opts ["-m" "figwheel.main" "-b" "dev" "-r"]}

           :test-front {:extra-paths ["env/test/resources" "test/cljs"]
                        :main-opts ["-m" "figwheel.main" "-co" "test.cljs.edn" "-m" "practicalli.test-runner"]}

           :min {:extra-paths  ["env/prod/resources"]
                 :main-opts ["-m" "figwheel.main" "-O" "advanced" "-bo" "prod"]}


           ;; Server

           :dev {:extra-paths ["env/dev/clj" "env/dev/resources"]
                 :jvm-opt ["-XX:-OmitStackTraceInFastThrow"]}

           :test {:extra-paths ["env/test/resources" "test/clj"]
                  :extra-deps {io.github.cognitect-labs/test-runner {:git/tag "v0.5.1" :git/sha "dfb30dd"}
                               clj-test-containers/clj-test-containers {:mvn/version "0.7.4"}}
                  :main-opts ["-m" "cognitect.test-runner"]
                  :exec-fn cognitect.test-runner.api/test
                  }

           :build {:deps {io.github.clojure/tools.build {:mvn/version "0.9.4"}}
                   :ns-default build}
           ;; Format
           :fmt {:extra-deps {cljfmt/cljfmt {:mvn/version "0.9.2"}}}
           :check {:main-opts ["-m" "cljfmt.main" "check"]}
           :fix {:main-opts ["-m" "cljfmt.main" "fix"]}
           }
 }
